/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Layer2Scaling, Layer2ScalingInterface } from "../Layer2Scaling";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
    ],
    name: "BatchFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionsRoot",
        type: "bytes32",
      },
    ],
    name: "BatchSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
    ],
    name: "BatchVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    name: "FraudPenaltyApplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudProof",
        type: "bytes32",
      },
    ],
    name: "FraudReported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "batches",
    outputs: [
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "transactionsRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
    ],
    name: "finalizeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextBatchId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_fraudProof",
        type: "bytes32",
      },
    ],
    name: "reportFraud",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slashingPenalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionsRoot",
        type: "bytes32",
      },
    ],
    name: "submitBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
    ],
    name: "verifyBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405266b1a2bc2ec5000060035534801561001b57600080fd5b5060018081905550611417806100326000396000f3fe6080604052600436106100955760003560e01c8063a23f6c5011610059578063a23f6c50146101d4578063b32c4d8d146101fd578063dfe3a3ae1461023e578063e2c41dbc14610267578063e33491a714610271576100ea565b8063155dd5ee146100ef57806327e235e3146101185780637f0cd794146101555780638462a7f81461017e57806389f1ea64146101a9576100ea565b366100ea573373ffffffffffffffffffffffffffffffffffffffff167f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474346040516100e09190610c08565b60405180910390a2005b600080fd5b3480156100fb57600080fd5b5061011660048036038101906101119190610c54565b61029a565b005b34801561012457600080fd5b5061013f600480360381019061013a9190610cdf565b61040a565b60405161014c9190610c08565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610d42565b610422565b005b34801561018a57600080fd5b506101936106b7565b6040516101a09190610c08565b60405180910390f35b3480156101b557600080fd5b506101be6106bd565b6040516101cb9190610c08565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190610d82565b6106c3565b005b34801561020957600080fd5b50610224600480360381019061021f9190610c54565b6107bc565b604051610235959493929190610dd9565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190610c54565b61080c565b005b61026f610988565b005b34801561027d57600080fd5b5061029860048036038101906102939190610c54565b610a71565b005b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031390610e89565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036b9190610ed8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103b8573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516103ff9190610c08565b60405180910390a250565b60026020528060005260406000206000915090505481565b6000806000848152602001908152602001600020600001540361047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190610f58565b60405180910390fd5b60008083815260200190815260200160002060030160009054906101000a900460ff16156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610fea565b60405180910390fd5b60008083815260200190815260200160002060030160019054906101000a900460ff1615610540576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105379061107c565b60405180910390fd5b60008061067a576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506003548110156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c7906110e8565b60405180910390fd5b600354600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106219190610ed8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcb97f678197099af4070ae1877f6e23ae7f39c83f03c5f841423542e89d2303a6003546040516106709190610c08565b60405180910390a2505b827fbc3c0e7347af80bfe43f887074fc7f1cbf950493435ef5d3c94362c76b2d2e19836040516106aa9190611108565b60405180910390a2505050565b60015481565b60035481565b6040518060a00160405280600154815260200182815260200142815260200160001515815260200160001515815250600080600154815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff0219169083151502179055509050506001547f54756ef60c2314d7eba772fa6c7ccb036cf55b8e9d95da41a50ec4cf28b3c736826040516107999190611108565b60405180910390a2600160008154809291906107b490611123565b919050555050565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b60008060008381526020019081526020016000206000015403610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b90610f58565b60405180910390fd5b60008082815260200190815260200160002060030160019054906101000a900460ff16156108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be906111b7565b60405180910390fd5b60008082815260200190815260200160002060030160009054906101000a900460ff161561092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190611223565b60405180910390fd5b600160008083815260200190815260200160002060030160006101000a81548160ff021916908315150217905550807f1ee066b0cc077ae247f731c0ad7cb81d140e8062773445294e6b74944ad455e360405160405180910390a250565b600034116109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c2906112b5565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a1a91906112d5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d47434604051610a679190610c08565b60405180910390a2565b60008060008381526020019081526020016000206000015403610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac090610f58565b60405180910390fd5b60008082815260200190815260200160002060030160019054906101000a900460ff1615610b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2390611355565b60405180910390fd5b62093a8060008083815260200190815260200160002060020154610b5091906112d5565b4211610b91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b88906113c1565b60405180910390fd5b600160008083815260200190815260200160002060030160016101000a81548160ff021916908315150217905550807f5cff112f1cb588779b4e6aae6baf0d738747fcf132f0ff202adcec605f9cabdf60405160405180910390a250565b6000819050919050565b610c0281610bef565b82525050565b6000602082019050610c1d6000830184610bf9565b92915050565b600080fd5b610c3181610bef565b8114610c3c57600080fd5b50565b600081359050610c4e81610c28565b92915050565b600060208284031215610c6a57610c69610c23565b5b6000610c7884828501610c3f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cac82610c81565b9050919050565b610cbc81610ca1565b8114610cc757600080fd5b50565b600081359050610cd981610cb3565b92915050565b600060208284031215610cf557610cf4610c23565b5b6000610d0384828501610cca565b91505092915050565b6000819050919050565b610d1f81610d0c565b8114610d2a57600080fd5b50565b600081359050610d3c81610d16565b92915050565b60008060408385031215610d5957610d58610c23565b5b6000610d6785828601610c3f565b9250506020610d7885828601610d2d565b9150509250929050565b600060208284031215610d9857610d97610c23565b5b6000610da684828501610d2d565b91505092915050565b610db881610d0c565b82525050565b60008115159050919050565b610dd381610dbe565b82525050565b600060a082019050610dee6000830188610bf9565b610dfb6020830187610daf565b610e086040830186610bf9565b610e156060830185610dca565b610e226080830184610dca565b9695505050505050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610e73601483610e2c565b9150610e7e82610e3d565b602082019050919050565b60006020820190508181036000830152610ea281610e66565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ee382610bef565b9150610eee83610bef565b9250828203905081811115610f0657610f05610ea9565b5b92915050565b7f426174636820646f6573206e6f74206578697374000000000000000000000000600082015250565b6000610f42601483610e2c565b9150610f4d82610f0c565b602082019050919050565b60006020820190508181036000830152610f7181610f35565b9050919050565b7f43616e6e6f74207265706f7274206672617564206f6e2061207665726966696560008201527f6420626174636800000000000000000000000000000000000000000000000000602082015250565b6000610fd4602783610e2c565b9150610fdf82610f78565b604082019050919050565b6000602082019050818103600083015261100381610fc7565b9050919050565b7f43616e6e6f74207265706f7274206672617564206f6e20612066696e616c697a60008201527f6564206261746368000000000000000000000000000000000000000000000000602082015250565b6000611066602883610e2c565b91506110718261100a565b604082019050919050565b6000602082019050818103600083015261109581611059565b9050919050565b7f496e73756666696369656e742062616c616e636520666f722070656e616c7479600082015250565b60006110d2602083610e2c565b91506110dd8261109c565b602082019050919050565b60006020820190508181036000830152611101816110c5565b9050919050565b600060208201905061111d6000830184610daf565b92915050565b600061112e82610bef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111605761115f610ea9565b5b600182019050919050565b7f42617463682069732066696e616c697a65640000000000000000000000000000600082015250565b60006111a1601283610e2c565b91506111ac8261116b565b602082019050919050565b600060208201905081810360008301526111d081611194565b9050919050565b7f426174636820616c726561647920766572696669656400000000000000000000600082015250565b600061120d601683610e2c565b9150611218826111d7565b602082019050919050565b6000602082019050818103600083015261123c81611200565b9050919050565b7f4465706f736974206d7573742062652067726561746572207468616e207a657260008201527f6f00000000000000000000000000000000000000000000000000000000000000602082015250565b600061129f602183610e2c565b91506112aa82611243565b604082019050919050565b600060208201905081810360008301526112ce81611292565b9050919050565b60006112e082610bef565b91506112eb83610bef565b925082820190508082111561130357611302610ea9565b5b92915050565b7f426174636820616c72656164792066696e616c697a6564000000000000000000600082015250565b600061133f601783610e2c565b915061134a82611309565b602082019050919050565b6000602082019050818103600083015261136e81611332565b9050919050565b7f42617463682074696d652077696e646f77206e6f74206f766572000000000000600082015250565b60006113ab601a83610e2c565b91506113b682611375565b602082019050919050565b600060208201905081810360008301526113da8161139e565b905091905056fea2646970667358221220f0f64cd269bc4a9e02bed7cd733628881cef02995e0ce7adccd1090d4ca9586f64736f6c63430008140033";

type Layer2ScalingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Layer2ScalingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Layer2Scaling__factory extends ContractFactory {
  constructor(...args: Layer2ScalingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Layer2Scaling & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Layer2Scaling__factory {
    return super.connect(runner) as Layer2Scaling__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Layer2ScalingInterface {
    return new Interface(_abi) as Layer2ScalingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Layer2Scaling {
    return new Contract(address, _abi, runner) as unknown as Layer2Scaling;
  }
}
